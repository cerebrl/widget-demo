import{interpolate as e}from"../../../_utilities/i18n.utilities.js";function n(e){const n=e?.value;if("object"!=typeof n)return"text";const r=n?.policyRequirements;return Array.isArray(r)?r.includes("VALID_EMAIL_ADDRESS_FORMAT")?"email":(r.includes("VALID_USERNAME"),"text"):"text"}function r(n){if("CHARACTER_SET"===n?.policyRequirement){const e=n?.params;return e?.["character-sets"].map(u)}if("LENGTH_BASED"===n?.policyRequirement){const r=n?.params,t=r?.["min-password-length"]||0,i=r?.["max-password-length"]||null,s=[];return i&&s.push({length:i,message:e("exceedsMaximumCharacterLength",{max:String(i)}),rule:"maximumLength"}),t&&s.push({length:t,message:e("doesNotMeetMinimumCharacterLength",{min:String(t)}),rule:"minimumLength"}),s}return"VALID_USERNAME"===n?.policyRequirement?[{length:null,message:e("chooseDifferentUsername"),rule:"validUsername"}]:"VALID_EMAIL_ADDRESS_FORMAT"===n?.policyRequirement?[{length:null,message:e("invalidEmailAddress"),rule:"validEmailAddress"}]:[{length:null,message:e("pleaseCheckValue"),rule:"unknown"}]}function t(n){switch(n?.policyId){case"at-least-X-capitals":{const r=n?.params,t=r?.numCaps;return e("minimumNumberOfUppercase",{num:String(t)})}case"at-least-X-numbers":{const r=n?.params,t=r?.numNums;return e("minimumNumberOfNumbers",{num:String(t)})}case"cannot-contain-characters":{const r=n?.params,t=r?.forbiddenChars.reduce(((e,n)=>e=`${e?`${e}, `:`${e}`} ${n}`),"");return e("fieldCanNotContainFollowingCharacters",{chars:t})}case"cannot-contain-others":{const r=n?.params,t=r?.disallowedFields?.reduce(((n,r)=>n=`${n?`${n}, `:`${n}`} ${e(r)}`),"");return e("fieldCanNotContainFollowingValues",{fields:t})}case"maximum-length":{const r=n?.params,t=r?.maxLength;return t>100?"":e("notToExceedMaximumCharacterLength",{max:String(t)})}case"minimum-length":{const r=n?.params,t=r?.minLength;return 1===t?"":e("noLessThanMinimumCharacterLength",{min:String(t)})}default:return""}}function i(e,n){return m(e.getFailedPolicies&&e.getFailedPolicies(),n).map((e=>({params:e?.params,policyRequirement:e?.policyRequirement||"",restructured:r(e)})))}function s(e,n){if("object"!=typeof e&&!e)return[];const r=e?.policies;return Array.isArray(r)?r.map((e=>({message:t(e),...e?.params&&{params:e?.params},...e?.policyId&&{policyId:e?.policyId}}))).filter((e=>!!e.message)):[]}function a(e){const n=e.getPolicies&&e.getPolicies();let r=!1;return n?.policyRequirements?r=n.policyRequirements.includes("REQUIRED"):e.isRequired&&(r=e.isRequired()),r}function u(n){const r=n.split(":"),t=r[0],i=r[1];return"0123456789"===i?{length:Number(t),message:e("minimumNumberOfNumbers",{num:String(t)}),rule:"numbers"}:"ABCDEFGHIJKLMNOPQRSTUVWXYZ"===i?{length:Number(t),message:e("minimumNumberOfUppercase",{num:String(t)}),rule:"uppercase"}:"abcdefghijklmnopqrstuvwxyz"===i?{length:Number(t),message:e("minimumNumberOfLowercase",{num:String(t)}),rule:"lowercase"}:i.includes("@")||i.includes("!")||i.includes("*")||i.includes("#")?{length:Number(t),message:e("minimumNumberOfSymbols",{num:String(t)}),rule:"symbols"}:{length:Number(t),message:e("pleaseCheckValue"),rule:"unknown"}}function m(e,n){return e.map((e=>{if("string"!=typeof e)return e;try{return JSON.parse(e)}catch(e){console.log(`Parsing failure for ${n}`)}}))}function l(n){return(n.getFailedPolicies&&n.getFailedPolicies()).reduce(((n,r)=>(r.policyRequirement,n=`${n}${e("pleaseCheckValue")}`)),"")}export{l as getAttributeValidationFailureText,n as getInputTypeFromPolicies,r as getValidationFailureParams,i as getValidationFailures,s as getValidationPolicies,a as isInputRequired,m as parseFailedPolicies};